/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

.header {
    height: 95vh; /*if you look the background doesn't cover the whole page */
    background-image: linear-gradient(
        to right bottom,
        rgba(126, 213, 111, 0.8), 
        rgba(40, 180, 131, 0.8)), 
        url("../img/hero.jpg"); /*the reasoning for this order is first to last in order of stacking .. so green first, then jpg*/
    background-size: cover; /*this has some responsive design to it - don't forget about this! */
    background-position: top; /*ensures that if you resize the image it stays sticky at the top so it doesn't zoom in in weird ways!!! */
    position: relative; /*this is set up for the logo-box*/

    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /*the first and second # mean x and y refer to the axess - the order of numbers is clockwise starting upper left */

}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px; /* where do these pixles start? from the parent element (header) */
}

.logo {
    height: 35px; /* the width will be automatically set up by browser (it would be the same if we only uncluded the width) */
}

.logo:hover {
    animation: moveInRight 10s ease-out;
}

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /*the above is in relation to the parent element */
    transform: translate(-50%, -50%);
    /* okay so the above is pretty cool
    top and left indicate 
    transform/translate - this works because 
    it no longer gets pinged by the parent element,
    but by the element itself!!! */
}

.heading-primary {
    color:#fff;
    text-transform: uppercase;

    backface-visibility: hidden;
}

.heading-primary-main {
    display: block;
    /*why are we using block level elements? because they take up the width that they have available AND add line breaks after and before them */
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation-name: moveInLeft;
    animation-duration: 1s;

    /* animation-timing-function: ease-out;  --there are more of these!*/
    /* animation-iteration-count: 3; */
    /* animation-delay: 3s; */
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;

    animation-name: moveInRight;
    animation-duration: 1s;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px) rotate(0deg);
    }
    60% {
        transform: rotate(180deg);
    }
    80% {
        transform: translateX(10px);
    }
    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }
    80% {
        transform: translateX(-10px);
    }
    100% {
        opacity: 1;
        transform: translate(0);
    }
}


/* The 0% is where we start
100% is where we end - we can also have anything inbetween!
why transform: translateX()? 
because we want it coming in on the X axis and Left to Right

ALSO - look at class heading-primary-main & heading-primary-sub
we need to assign it the animation-name and animation-duration!
these are the only two properties NESSESSARY 
for an animation to work - but there are lots of others!

notice a shake at the end of an animation? check out 
   backface-visibility: hidden; under .heading-primary
   it determins of the back side of the element is visible 
   it comes in handy for rotating animations 
*/
